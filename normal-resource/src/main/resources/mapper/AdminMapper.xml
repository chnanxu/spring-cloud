<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.mapper.AdminMapper">
    
    <select id="getLeftNavbar">
        select * from admin_left_navber
        where root_id=0;
    </select>

    <select id="getSonLeftNavbar">
        select * from admin_left_navber
        where root_id=#{id}
    </select>

    <select id="getUser" resultType="QueryUserResult">
        SELECT
            s.uid,
            s.username,
            s.email,
            s.phone,
            s.uname,
            s.sex,
            s.user_img,
            s.sign_time,
            deleted,
            enabled,
            r.name as role_name
        FROM
            users s
                LEFT JOIN user_role ur ON s.uid = ur.uid
                LEFT JOIN role r ON ur.role_id=r.role_id
        order by s.sign_time asc
        OFFSET ${pageNum} ROW
        FETCH NEXT 14 ROWS ONLY
    </select>  <!--查询所有用户-->

    <select id="getRole">
        select * from role
        order by role_id asc
        OFFSET ${pageNum} ROW
        FETCH NEXT 14 ROWS ONLY
    </select>


    <select id="getTempProjectById">
        select * from item_details_temp where uid=#{uid} and pid=#{pid} and isOK=1
    </select>

    <select id="getTempProjectList">
        select * from item_details_temp where isOK=1 or isOK=2 order by create_time desc
        OFFSET ${pageNum} ROW
            FETCH NEXT 10 ROWS ONLY
    </select>

    <select id="getProjectList">
        select * from item_details
        where isDeleted=0 and isTakeoff=0
        order by create_time desc
        OFFSET ${pageNum} ROW
        FETCH NEXT 10 ROWS ONLY
    </select>

    <select id="getDeletedProjectList">
        select * from item_details
        where isDeleted=1
        order by create_time desc
        OFFSET ${pageNum} ROW
        FETCH NEXT 10 ROWS ONLY
    </select>

    <select id="getTakeoffProjectList">
        select * from item_details
        where isTakeoff=1
        order by create_time desc
        OFFSET ${pageNum} ROW
            FETCH NEXT 10 ROWS ONLY
    </select>


    <update id="reCoverProject">
        update item_details
        set isTakeoff=0
        where pid=#{pid}
    </update>

    <insert id="setProject" parameterType="Item_Details_Temp">
        insert into item_details
        values (#{uid},#{uname},#{pid},#{community_id},#{community_name},#{type_id},#{type_name},#{detail_type},#{title},#{simple_text},#{content},#{cover_img},#{href},#{tag},#{create_time},0,0,0,0,0,0)
        delete from item_details_temp where uid=#{uid} and pid=#{pid}
    </insert>

    <update id="refuseProjectById">
        update item_details_temp set isOK=-1,refuse_reason=#{refuse_reason} where uid=#{uid} and pid=#{pid}
    </update>

    <update id="deleteProjectById">
        update item_details set isDeleted=1 where pid=#{pid}
    </update>

    <update id="takeoffProjectById">
        update item_details set isTakeoff=1 where pid=#{pid}
    </update>
    
    <select id="getCommunity">
        select * from community order by create_time desc
        OFFSET ${pageNum} ROW
        FETCH NEXT 10 ROWS ONLY
    </select>

    <select id="updateCommunity">
        update community
        set community_name=#{community_name},type_id=#{type_id}
        where community_id=#{community_id};
        select * from community where community_id=#{community_id}
    </select>

    <update id="updateUserAuth">
        update user_role
        set role_id=#{role_id}
        where uid=#{uid}
    </update>

    <select id="getReportListByPageNum">
        select * from report_item
        order by create_time desc
        OFFSET ${pageNum} ROW
        FETCH NEXT 14 ROWS ONLY
    </select>

</mapper>